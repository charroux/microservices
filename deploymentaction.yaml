apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: dbcar
  POSTGRES_USER: dbuser
  POSTGRES_PASSWORD: dbpass

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: postgres
    version: "1.0"
  name: postgres
#  annotations:
#    sidecar.istio.io/inject: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: charroux/postgres:1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          resources: {}
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres
          emptyDir: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres
  name: postgres
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
  type: NodePort
status:
  loadBalancer: {}

---


apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: carservice
    version: "1.0"
  name: carservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carservice
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: carservice
    spec:
      containers:
      - name: carservice
        image: local/carservice:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: carservice
  name: carservice
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: carservice
  type: NodePort
status:
  loadBalancer: {}


