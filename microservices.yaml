apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: carservice
    version: "1.0"
  name: carservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: carservice
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: carservice
    spec:
      containers:
      - name: carservice
        image: charroux/carservice:2
        imagePullPolicy: Always
        env:
          - name: CUSTOMER_SERVICE_HOST
            value: carstat
          - name: CUSTOMER_SERVICE_PORT
            value: "8080"
        livenessProbe:
          initialDelaySeconds: 180
          httpGet:
            path: /actuator/health
            port: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: carservice
  name: carservice
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: carservice
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: carservice
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /carservice/
#        regex: '\/carservice\/*'
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 80
        host: carservice.default.svc.cluster.local

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: carstat
  name: carstat
spec:
  replicas: 1
  selector:
    matchLabels:
      run: carstat
  template:
    metadata:
      labels:
        run: carstat
    spec:
      containers:
        - name: carstat
          image: charroux/carstat:1
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: carstat
  name: carstat
spec:
  ports:
    - name: grpc-web
      port: 8080
      targetPort: 8080
  selector:
    run: carstat
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: carstat
spec:
  hosts:
    - "*"
  gateways:
    - microservice-gateway
  http:
    - match:
        - uri:
            prefix: /carstat/
      rewrite:
        uri: /
      route:
        - destination:
            port:
              number: 80
            host: carstat.default.svc.cluster.local


---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: cust
    version: "1.0"
  name: cust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cust
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cust
    spec:
      containers:
        - name: cust
          image: charroux/customer:1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: cust
  name: cust
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: http
  selector:
    app: cust
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: cust
spec:
  hosts:
    - "*"
  gateways:
    - microservice-gateway
  http:
    - match:
        - uri:
            prefix: /customer/
      #        regex: '\/carservice\/*'
      rewrite:
        uri: /
      route:
        - destination:
            port:
              number: 80
            host: cust.default.svc.cluster.local
